file1 <- "/data2/bsi/tertiary/Weinshilboum_Richard_weinsh/s112047.beauty/analyses/manuscripts/panoply/paperFinal/panoplyDev/buildData/dgiAntiNeo1.json"
library(RJSONIO)
dgiAntiNeo1 <- fromJSON(paste(readLines(file1), collapse=""))

dgiAntiNeo1 <- do.call(rbind,sapply(dgiAntiNeo1$matchedTerms,function(x) cbind(x$geneName,matrix(unlist(x$interactions),byrow=T,ncol=4))[,c(1,2,4,5)]))[,1:3]
colnames(dgiAntiNeo1)<-c("Gene","Drug","interactionType")

file2 <- "/data2/bsi/tertiary/Weinshilboum_Richard_weinsh/s112047.beauty/analyses/manuscripts/panoply/paperFinal/panoplyDev/buildData/dgiAntiNeo2.json"
dgiAntiNeo2 <- fromJSON(paste(readLines(file2), collapse=""))

dgiAntiNeo2 <- do.call(rbind,sapply(dgiAntiNeo2$matchedTerms,function(x) cbind(x$geneName,matrix(unlist(x$interactions),byrow=T,ncol=4))[,c(1,2,4,5)]))[,1:3]
colnames(dgiAntiNeo2)<-c("Gene","Drug","interactionType")

file3 <- "/data2/bsi/tertiary/Weinshilboum_Richard_weinsh/s112047.beauty/analyses/manuscripts/panoply/paperFinal/panoplyDev/buildData/dgiAntiNeo3.json"
dgiAntiNeo3 <- fromJSON(paste(readLines(file3), collapse=""))
dgiAntiNeo3 <- do.call(rbind,sapply(dgiAntiNeo3$matchedTerms,function(x) cbind(x$geneName,matrix(unlist(x$interactions),byrow=T,ncol=4))[,c(1,2,4,5)]))[,1:3]
colnames(dgiAntiNeo3)<-c("Gene","Drug","interactionType")

dgiAntiNeo <- rbind.data.frame(dgiAntiNeo1,dgiAntiNeo2,dgiAntiNeo3)
dim(dgiAntiNeo)
dgiAntiNeo[1:10,]
table(dgiAntiNeo[,3])
dbank[1:5,]
ugenes.db[1:10]
length(ugenes.db)
table(dband[,"Annotation From"])
table(dbank[,"Annotation From"])
dim(dbank)
k
dbankdf
k
dbankdf[1:5,]
dbank$DRUG[k]
glist[[k]]
length(glist)
glist[44]
dank[44,]
dbank[44,]
dgidb[1:5,]
length(glist[k])
length(glist[[k]])
dim(dbankdf)
dbankdf[1:10,]
table(dbankdf$Source)
dim(dgidbPan)
data(dgidbPan)
load("/home/sinnwell/R/x86_64-unknown-linux-gnu-library/3.2/panoply/data/dgidbPan.RData")
ls()
dim(dgidbPan)
dgidbPan[1:10,]
dim(dgidbPan)
dgidbPan[1:5,]
options(width=150)
dgidbPan[1:5,]
dgiDrug[1:10,]
dgiDrug[1:2,]
drugPan[1:5,]
drugdbPan[1:5,]
dgiDrug[1:2,]
drugPan <- dgiDrug)
drugPan <- dgiDrug
)
length(allgenes)
length(unique(allgenes))
drugk <- "OLAPARIB"
 unique(unlist(strsplit(dgiDrug[k,2],split=";")))
unique(unlist(strsplit(drugPan[k,2],split=";")))
which(colnames(dgi.adj) %in% dgi.gs[[drugPan[k,"Drug"]]])
drug.gs
unique(unlist(strsplit(drugPan[k,2],split=";")))
sum(drug.adj[drugk,])
ls()
drugdbPan[1:5,]
drugPan <- drugdbPan
k
drugk
drug.gs[[drugk]]
gidx
dim(drug.adj)
drugk
dim(drugPan)
names(drugPan)
colnames(drug.adj)[1:10]
dim(drug.adj)
drugk
drugPan <- dgidbPan
ls()
dgidbPan[1:5,]
dgiDrug[1:5,]
drugPan <- dgiDrug
which(length(drug.gs)==0)
which(sapply(drug.gs, length)==0)
dgi.gs["DINUTUXIMAB"]
annotateDrugs <- function(drugPan, byDrug=FALSE) {

  ## Make drug-gene list and adjacency matrix for use in panDrugSets
  
  if(byDrug) {
    ## for drug/gene in this format (by drug)
    ##         Drug                              GeneID Synonyms DGIdb DBankCurate
    ## ELLAGIC ACID            PRKCA;SQLE;PRKCB;SYK;CA9           TRUE       FALSE
    ## BRYOSTATIN-1 PRKCA;PRKCB;PRKCQ;PRKCD;PRKCG;PRKCE           TRUE       FALSE
    allgenes <- unique(unlist(strsplit(drugPan[,2], split=";")))
    drug.adj <- matrix(0, nrow=length(unique(drugPan[,1])), ncol=length(allgenes))
    dimnames(drug.adj) <- list(unique(drugPan[,1]), allgenes)
    drug.gs <- list()
    for(drugk in unique(drugPan[,1])) {
      k <- which(drugPan[,1] %in% drugk)
      drug.gs[[drugk]] <- unique(unlist(strsplit(drugPan[k,2],split=";")))
      gidx <- which(colnames(drug.adj) %in% drug.gs[drugPan[k,"Drug"]])
      drug.adj[drugk,gidx] <- 1
    }
  } else {
    ## this format: 
    ##       Gene         Drug                  type Source
    ## PRKCA ELLAGIC ACID inhibitor,competitive  DGIdb
    ## PRKCA BRYOSTATIN-1                   n/a  DGIdb
    ## PRKCA   SOPHORETIN             inhibitor  DGIdb
    allgenes <- unique(drugPan[,1])
    alldrugs <- unique(drugPan[,2])
    drug.adj <- matrix(0, nrow=length(alldrugs), ncol=length(allgenes))
    dimnames(drug.adj) <- list(alldrugs, allgenes)
    drug.gs <- list()
    for(drugk in alldrugs) {
      k <- which(drugPan[,2] %in% drugk)
      drug.gs[[drugk]] <- unique(drugPan[k,1])
      gidx <- which(colnames(drug.adj) %in% drug.gs[drugPan[k,"Drug"]])
      drug.adj[drugk,gidx] <- 1
    }    
  }
  return(list(drug.gs, drug.adj))
}
names(annoDrugs)
length(annoDrugs[[1]])
table(rowSums(dgi.adj)
)
load("/home/sinnwell/R/x86_64-unknown-linux-gnu-library/3.2/panoply/data/dgiSets.RData")
table(rowSums(dgi.adj))
drugdbPan[1:5,]
ls()
dgiDrug[1:5,]
dim(dadj)
length(dgi.gs)
drugPan <- dgiPan
drugPan <- dgiDrug
drugPan[1:10,]
drugk <- drugPan[1,1]
drug.gs[drugk]
drug.gs[[drugk]]
gidx
drugPan[k,"Drug"]
table(colnames(drug.adj) %in% drug.gs[drugPan[k,"Drug"]]))
table(colnames(drug.adj) %in% drug.gs[drugPan[k,"Drug"]])
drug.gs[drugPan[k,"Drug"]]
gidx
table(rowSums(drug.adj))
table(colSums(drug.adj))
drugdbPan[1:5,]
drugPan <- drugdbPan
drugk <- alldrugs[1]
drugk
gidx
drug.gs[[drugk]]
drugPan[k,"Drug"]
gidx
table(colSums(drug.adj))
table(rowSums(drug.adj))
annotateDrugs <- function(drugPan, byDrug=FALSE) {

  ## Make drug-gene list and adjacency matrix for use in panDrugSets
  
  if(byDrug) {
    ## for drug/gene in this format (by drug)
    ##         Drug                              GeneID Synonyms DGIdb DBankCurate
    ## ELLAGIC ACID            PRKCA;SQLE;PRKCB;SYK;CA9           TRUE       FALSE
    ## BRYOSTATIN-1 PRKCA;PRKCB;PRKCQ;PRKCD;PRKCG;PRKCE           TRUE       FALSE
    allgenes <- unique(unlist(strsplit(drugPan[,2], split=";")))
    drug.adj <- matrix(0, nrow=length(unique(drugPan[,1])), ncol=length(allgenes))
    dimnames(drug.adj) <- list(unique(drugPan[,1]), allgenes)
    drug.gs <- list()
    for(drugk in unique(drugPan[,1])) {
      k <- which(drugPan[,1] %in% drugk)
      drug.gs[[drugk]] <- unique(unlist(strsplit(drugPan[k,2],split=";")))
      gidx <- which(colnames(drug.adj) %in% drug.gs[[drugPan[k,"Drug"]]])
      drug.adj[drugk,gidx] <- 1
    }
  } else {
    ## this format: 
    ##       Gene         Drug                  type Source
    ## PRKCA ELLAGIC ACID inhibitor,competitive  DGIdb
    ## PRKCA BRYOSTATIN-1                   n/a  DGIdb
    ## PRKCA   SOPHORETIN             inhibitor  DGIdb
    allgenes <- unique(drugPan[,1])
    alldrugs <- unique(drugPan[,2])
    drug.adj <- matrix(0, nrow=length(alldrugs), ncol=length(allgenes))
    dimnames(drug.adj) <- list(alldrugs, allgenes)
    drug.gs <- list()
    for(drugk in alldrugs) {
      k <- which(drugPan[,2] %in% drugk)
      drug.gs[[drugk]] <- unique(drugPan[k,1])
      gidx <- which(colnames(drug.adj) %in% drug.gs[[drugk]])
      drug.adj[drugk,gidx] <- 1
    }    
  }
  return(list(drug.gs, drug.adj))
}
dgiAntiNeo1[1:10,]
dbankLines[1:5,]
dbankLines[1:5]
dbank[1:5,]
dbank[1:5,c(2,3,4,6,7,8)]
dbank[1:20,c(2,3,4,6,7,8)]
dbank[1:20,c(2,3,4,6,8,9)]
dbank[1:5,c(2,3,4,6,8,9)]
dbank[1:5,c(2,3,4,6,8,9,10)]
dbank[1:5,c(2,3,4,6,8,9)]
dbank[1:5,c(2,3,4,8,9)]
dbank[1:5,c(2,3,4,6,9)]
dbank[1:5,c(2,4,6,9)]
dbank[2:5,c(2,4,6,9)]
dbank[c(2:4,6),c(2,4,6,9)]
dbank[c(2:4,7),c(2,4,6,9)]
dbank[c(2:4,7,8),c(2,4,6,9)]
dbank[c(2:4,7,9),c(2,4,6,9)]
dbank[c(2:4,7,10),c(2,4,6,9)]
drugdbPan[1:5,]
dim(drugdbPan)
save(drugdbPan, file="/home/sinnwell/beauty/analyses/manuscripts/panoply/paperFinal/panoplyGit/data/drugdbPan.RData")
kable(head(drugdbPan))
library(knitr)
kable(head(drugdbPan))
drug.gs <- annoDrugs[[1]]
drug.adj <- annoDrugs[[2]]
table(sapply(drug.gs, length))
table(rowSums(drug.adj))
table(colSums(drug.adj))
load("/home/sinnwell/beauty/analyses/manuscripts/panoply/paperFinal/panoplyGit/data/reactome.RData")
ls()
dim(reactome.adj)
reactome.gs[1]
q()
n
